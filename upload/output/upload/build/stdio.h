// WARNING: this file is auto-generated by the C2 compiler.
// Any changes you make might be lost!

#ifndef STDIO_H
#define STDIO_H

#include "c2types.h"

#include "c2.h"

#ifdef __cplusplus
extern "C" {
#endif

#define _IOFBF 0
#define _IOLBF 1
#define _IONBF 2
#define EOF -1
#define SEEK_SET 0
#define SEEK_CUR 1
#define SEEK_END 2
typedef struct _IO_marker_ _IO_marker;

typedef struct FILE_ FILE;

struct _IO_marker_ {
  _IO_marker* next;
  FILE* sbuf;
  int32_t _pos;
};

typedef uint64_t off_t;

int32_t remove(const char* __filename);
int32_t rename(const char* __old, const char* __new);
FILE* tmpfile();
char* tempnam(const char* __dir, const char* __pfx);
int32_t fclose(FILE* __stream);
int32_t fflush(FILE* __stream);
FILE* fopen(const char* __filename, const char* __modes);
FILE* freopen(const char* __filename, const char* __modes, FILE* __stream);
FILE* fdopen(int32_t __fd, const char* __modes);
void setbuf(FILE* __stream, char* __buf);
int32_t setvbuf(FILE* __stream, char* __buf, int32_t __modes, uint64_t __n);
void setbuffer(FILE* __stream, char* __buf, uint64_t __size);
void setlinebuf(FILE* __stream);
int32_t fprintf(FILE* __stream, const char* __format, ...);
int32_t printf(const char* __format, ...);
int32_t sprintf(char* __s, const char* __format, ...);
int32_t dprintf(int32_t __fd, const char* __fmt, ...);
int32_t fscanf(FILE* __stream, const char* __format, ...);
int32_t scanf(const char* __format, ...);
int32_t sscanf(const char* __s, const char* __format, ...);
int32_t fgetc(FILE* __stream);
int32_t getc(FILE* __stream);
int32_t getchar();
int32_t getc_unlocked(FILE* __stream);
int32_t getchar_unlocked();
int32_t fputc(int32_t __c, FILE* __stream);
int32_t putc(int32_t __c, FILE* __stream);
int32_t putchar(int32_t __c);
int32_t putchar_unlocked(int32_t __c);
int32_t getw(FILE* __stream);
int32_t putw(int32_t __w, FILE* __stream);
char* fgets(char* __s, int32_t __n, FILE* __stream);
int64_t getdelim(char** __lineptr, uint64_t* __n, int32_t __delimiter, FILE* __stream);
int64_t getline(char** __lineptr, uint64_t* __n, FILE* __stream);
int32_t fputs(const char* __s, FILE* __stream);
int32_t puts(const char* __s);
int32_t ungetc(int32_t __c, FILE* __stream);
int32_t fread(void* __ptr, uint64_t __size, uint64_t __n, FILE* __stream);
uint64_t fwrite(const void* __ptr, uint64_t __size, uint64_t __n, FILE* __s);
int32_t fseek(FILE* __stream, int64_t __off, int32_t __whence);
int64_t ftell(FILE* __stream);
void rewind(FILE* __stream);
int32_t fseeko(FILE* __stream, uint64_t __off, int32_t __whence);
uint64_t ftello(FILE* __stream);
void clearerr(FILE* __stream);
int32_t feof(FILE* __stream);
int32_t ferror(FILE* __stream);
void perror(const char* __s);
int32_t fileno(FILE* __stream);
FILE* popen(const char* __command, const char* __modes);
int32_t pclose(FILE* __stream);
char* ctermid(char* __s);
void flockfile(FILE* __stream);
int32_t ftrylockfile(FILE* __stream);
void funlockfile(FILE* __stream);
char* tmpnam_r(char* __s);
int32_t renameat(int32_t __oldfd, const char* __old, int32_t __newfd, const char* __new);
FILE* fmemopen(void* __s, uint64_t __len, const char* __modes);
FILE* open_memstream(char** __bufloc, uint64_t* __sizeloc);
int32_t fflush_unlocked(FILE* __stream);
int32_t fgetc_unlocked(FILE* __stream);
int32_t putc_unlocked(int32_t __c, FILE* __stream);
int32_t fputc_unlocked(int32_t __c, FILE* __stream);
int64_t __getdelim(char** __lineptr, uint64_t* __n, int32_t __delimiter, FILE* __stream);
int32_t fread_unlocked(void* __ptr, uint64_t __size, uint64_t __n, FILE* __stream);
uint64_t fwrite_unlocked(const void* __ptr, uint64_t __size, uint64_t __n, FILE* __stream);
void clearerr_unlocked(FILE* __stream);
int32_t feof_unlocked(FILE* __stream);
int32_t ferror_unlocked(FILE* __stream);
int32_t asprintf(char** _arg0, const char* _arg1, ...);
char* ctermid_r(char* _arg0);
char* fgetln(FILE* _arg0, uint64_t* _arg1);
const char* fmtcheck(const char* _arg0, const char* _arg1);
int32_t fpurge(FILE* _arg0);
FILE* zopen(const char* _arg0, const char* _arg1, int32_t _arg2);

extern FILE* stdin;

extern FILE* stdout;

extern FILE* stderr;

#ifdef __cplusplus
}
#endif

#endif
